name: Build and Release astro-catalog

on:
  push:
    tags:
      - "v*"   # e.g. v2.0.0

jobs:
  build:
    name: Build astro-catalog
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "flet[all]==0.28.3" -r requirements.txt

      - name: Build desktop app
        run: |
          mkdir -p dist
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            flet pack src/main.py \
              --name astro-catalog \
              --icon assets/icon.png \
              --product-name "Astro Catalog" \
              --product-version "${GITHUB_REF_NAME#v}" \
              --copyright "Copyright (c) 2025 Sylvain Villet"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            flet pack src/main.py \
              --name astro-catalog \
              --icon assets/icon.png \
              --product-name "Astro Catalog" \
              --product-version "${GITHUB_REF_NAME#v}" \
              --copyright "Copyright (c) 2025 Sylvain Villet"
          else
            flet pack src/main.py \
              --name astro-catalog \
              --icon assets/icon.png \
              --product-name "Astro Catalog" \
              --product-version "${GITHUB_REF_NAME#v}" \
              --copyright "Copyright (c) 2025 Sylvain Villet"
          fi

      - name: Package binaries
        shell: bash
        run: |
          mkdir -p dist/release
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a dist/release/astro-catalog-windows.zip dist/*.exe
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            tar -czvf dist/release/astro-catalog-macos.tar.gz -C dist *.app
          else
            tar -czvf dist/release/astro-catalog-linux.tar.gz -C dist astro-catalog
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: astro-catalog-${{ matrix.os }}
          path: dist/release/*

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # use PAT, not the default token
